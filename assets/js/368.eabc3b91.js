(window.webpackJsonp=window.webpackJsonp||[]).push([[368],{692:function(s,a,e){"use strict";e.r(a);var t=e(3),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("数据库表结构：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("create table user "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" int primary key,\n    name varchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n    sex varchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n    index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("engine"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("innodb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id,name where "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'shenjian'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id,name,sex where "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'shenjian'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("blockquote",[a("p",[s._v("多查询了一个属性，为何检索过程完全不同？")])]),s._v(" "),a("ul",[a("li",[s._v("什么是回表查询？")]),s._v(" "),a("li",[s._v("什么是索引覆盖？")]),s._v(" "),a("li",[s._v("如何实现索引覆盖？")]),s._v(" "),a("li",[s._v("哪些场景，可以利用索引覆盖来优化SQL？")])]),s._v(" "),a("h2",{attrs:{id:"_1-回表查询和索引覆盖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-回表查询和索引覆盖"}},[s._v("#")]),s._v(" 1. 回表查询和索引覆盖")]),s._v(" "),a("p",[a("font",{attrs:{color:"red"}},[s._v("InnoDB"),a("strong",[s._v("普通索引")]),s._v("的叶子节点存储主键值")])],1),s._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("strong",[s._v("通常情况下，普通索引的查询需要扫码两遍索引树")])])],1),s._v(" "),a("h3",{attrs:{id:"非聚簇索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非聚簇索引"}},[s._v("#")]),s._v(" 非聚簇索引")]),s._v(" "),a("p",[s._v("如果不是主键索引，则就可以称之为非主键索引，又可以称之为辅助索引或者二级索引。主键索引的叶子节点存储了完整的数据行，而非主键索引的叶子节点存储的则是"),a("strong",[s._v("主键索引值")]),s._v("，通过非主键索引查询数据时：")]),s._v(" "),a("ul",[a("li",[s._v("会先查找到主键索引")]),s._v(" "),a("li",[s._v("然后再到主键索引上去查找对应的数据。")])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"索引覆盖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引覆盖"}},[s._v("#")]),s._v(" 索引覆盖")]),s._v(" "),a("p",[s._v("在这里假设我们有张表user，具有三列：执行如下sql语句：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ID，age，name，create_time\n\nid是主键，"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age, create_time, name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 建立辅助索引\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("select name from user where age > 2 order by create_time desc;")])]),s._v(" "),a("p",[s._v("正常的话，查询分两步：")]),s._v(" "),a("ol",[a("li",[s._v("按照辅助索引，查找到记录的主键")]),s._v(" "),a("li",[s._v("按照主键主键索引里查找记录，返回name")])]),s._v(" "),a("p",[s._v("但实际上，我们可以看到，辅助索引节点是按照"),a("code",[s._v("age")]),s._v("，"),a("code",[s._v("create_time")]),s._v("，"),a("code",[s._v("name")]),s._v("建立的，索引信息里完全包含我们所要的信息。 "),a("strong",[s._v("因此不需要通过主键ID值的查找数据行的真实所在， 直接取得叶节点中name的值返回即可。")]),s._v(" 通过这种覆盖索引直接查找的方式， 可以省略回表查询主键"),a("code",[s._v("id")]),s._v("， 大大的提高了查询性能")]),s._v(" "),a("p",[a("font",{attrs:{color:"red"}},[a("strong",[s._v("将单列索引(name)升级为联合索引(name, sex)，即可避免回表")])]),s._v("。将被查询的字段，建立到联合索引里去。")],1),s._v(" "),a("p",[s._v("按照这种思想Innodb里针对使用辅助索引的查询场景做了优化，叫"),a("strong",[s._v("覆盖索引")])]),s._v(" "),a("h3",{attrs:{id:"回表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回表"}},[s._v("#")]),s._v(" 回表")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from t where name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" lisi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("　\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("是如何执行的呢？")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img-2021-later/20210626232550.png",alt:"20427"}})]),s._v(" "),a("p",[s._v("如"),a("strong",[s._v("粉红色")]),s._v("路径，需要扫码两遍索引树：")]),s._v(" "),a("p",[s._v("（1）先通过普通索引定位到主键值id=5；")]),s._v(" "),a("p",[s._v("（2）在通过聚集索引定位到行记录；")]),s._v(" "),a("p",[s._v("这就是所谓的"),a("strong",[s._v("回表查询")]),s._v("，先定位主键值，再定位行记录，它的性能较扫一遍索引树更低。")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("【问题解答】："),a("code",[s._v("count(*)")]),s._v("是统计表数据数量的，在查询的时候虽然优先走非聚集索引，但是它不需要回表操作，它只需要统计非聚集索引树上的值即可，属于mysql5.7.18新特性！")]),s._v(" "),a("hr"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"_2-全列匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-全列匹配"}},[s._v("#")]),s._v(" 2. 全列匹配")]),s._v(" "),a("p",[s._v("where子句几个搜索条件顺序调换不影响查询结果，因为MySQL的"),a("strong",[s._v("查询优化器会自动调整where子句的条件顺序")]),s._v("以使用适合的索引。将where中的条件顺序颠倒，效果是一样的。")]),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"_3-最左前缀匹配原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-最左前缀匹配原则"}},[s._v("#")]),s._v(" 3. 最左前缀匹配原则")]),s._v(" "),a("p",[a("strong",[s._v("最左匹配原则的定义")]),s._v("："),a("strong",[s._v("最左优先")]),s._v("，以最左边的为起点任何连续的索引都能匹配上。同时遇到范围查询("),a("code",[s._v(">")]),s._v("、"),a("code",[s._v("<")]),s._v("、"),a("code",[s._v("between")]),s._v("、"),a("code",[s._v("like")]),s._v(")就会停止匹配")]),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("要注意使用复合索引需要满足最左侧索引的原则")]),s._v("，如果where条件里面没有最左边的一到多列，索引就不会起作用。")]),s._v(" "),a("p",[s._v("针对的是"),a("strong",[s._v("联合索引")]),s._v("（使用多列组合一个索引）")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("create index index_name on table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a, b, c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  --联合索引a、b、c\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("1. 建立联合索引时，要选择重复值最少的列，作为最左列")])]),s._v(" "),a("p",[a("strong",[s._v("2. 查询条件中，必须包含最左列")])]),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"_4-最左使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-最左使用"}},[s._v("#")]),s._v(" 4. 最左使用")]),s._v(" "),a("p",[a("strong",[s._v("联合索引a、b、c，优先匹配a索引所在的列")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("create index index_name on table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a, b, c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_1-全值匹配查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-全值匹配查询"}},[s._v("#")]),s._v(" 1. 全值匹配查询")]),s._v(" "),a("p",[s._v("查询时必须包含"),a("code",[s._v("a")]),s._v("列，最左列索引")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table where a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" and b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  and c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-匹配左边的列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-匹配左边的列"}},[s._v("#")]),s._v(" 2. 匹配左边的列")]),s._v(" "),a("p",[a("strong",[s._v("走索引")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" and b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" and b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v(" and c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("不走索引")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where  b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where  c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where  b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v(" and c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_3-匹配列前缀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-匹配列前缀"}},[s._v("#")]),s._v(" 3. 匹配列前缀")]),s._v(" "),a("p",[s._v("前缀匹配用的是索引，后缀和中缀只能全表扫描了")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where a like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'As%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   -- 前缀都是排好序的，走索引查询\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where  a like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%As'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  -- 全表查询\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where  a like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%As%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" -- 全表查询\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("如果列是字符型的话它的比较规则是先比较字符串的第一个字符，第一个字符小的哪个字符串就比较小，如果两个字符串第一个字符相通，那就再比较第二个字符，第二个字符比较小的那个字符串就比较小，依次类推，比较字符串。")])]),s._v(" "),a("h3",{attrs:{id:"_4-匹配范围值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-匹配范围值"}},[s._v("#")]),s._v(" 4. 匹配范围值")]),s._v(" "),a("p",[s._v("走索引")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" and a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("出现不等值情况，只会覆盖"),a("strong",[s._v("最左列索引")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" and a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" and b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n-- 只能覆盖到a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ,不能覆盖b和c\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table where a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" and b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v("  and c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_5-精确匹配某一列并范围匹配另外一列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-精确匹配某一列并范围匹配另外一列"}},[s._v("#")]),s._v(" 5. 精确匹配某一列并范围匹配另外一列")]),s._v(" "),a("p",[s._v("如果左边的列是精确查找的，右边的列可以进行范围查找")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name where  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" and b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("a=1")]),s._v("的情况下b是有序的，进行范围查找走的是"),a("strong",[s._v("联合索引")])]),s._v(" "),a("h3",{attrs:{id:"_6-排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-排序"}},[s._v("#")]),s._v(" 6. 排序")]),s._v(" "),a("p",[a("code",[s._v("order by")]),s._v("走索引，必须要保证"),a("strong",[s._v("子句的顺序和索引列建立的顺序一致")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name order by a,b,c limit "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  -- 走索引\n \n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name order by b,c,a limit "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  -- 顺序颠倒，索引失效\n \n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name order by a limit "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    -- 用到部分索引\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" * from table_name order by a,b limit "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   -- 用到部分索引\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("br"),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("【参考】"),a("a",{attrs:{href:"https://blog.csdn.net/sinat_41917109/article/details/88944290",target:"_blank",rel:"noopener noreferrer"}},[s._v("Mysql最左匹配原则"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("strong",[s._v("最后总结一下")])]),s._v(" "),a("ol",[a("li",[s._v("使用聚集索引的查询效率要比非聚集索引的效率要高，但是如果需要频繁去改变聚集索引的值，写入性能并不高，因为需要移动对应数据的物理位置")]),s._v(" "),a("li",[s._v("非聚集索引在查询的时候可以的话就避免二次查询，这样性能会大幅提升。")]),s._v(" "),a("li",[s._v("不是所有的表都适合建立索引，只有数据量大表才适合建立索引，且建立在选择性高的列上面性能会更好。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);