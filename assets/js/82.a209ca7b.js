(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{409:function(s,e,a){"use strict";a.r(e);var n=a(3),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"【android实战】用viewpager偏移看到下一页部分内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#【android实战】用viewpager偏移看到下一页部分内容"}},[s._v("#")]),s._v(" 【Android实战】用ViewPager偏移看到下一页部分内容")]),s._v(" "),e("blockquote",[e("p",[s._v("http://www.voidcn.com/article/p-zhcdoykj-xn.html")])]),s._v(" "),e("p",[s._v("机顶盒项目有个需求，在TV选项下，要求第一页显示节目时，能看到第二页部分内容（也就是图中最右边有黑色遮罩层的那些是第二页的内容）：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://ewr1.vultrobjects.com/imgspice/000/003/301/421_513_137.jpg",alt:"这里写图片描述"}})]),s._v(" "),e("p",[s._v("当向右翻页时，第二页的内容滑到最左边，且第三页的部分内容显示在最右边。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://ewr1.vultrobjects.com/imgspice/000/003/301/422_f17_d59.jpg",alt:"这里写图片描述"}})]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("这个项目我是用ViewPager实现滑页的，现在来针对上面的需求进行讲解如何实现。")]),s._v(" "),e("hr"),s._v(" "),e("h2",{attrs:{id:"_1-准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备工作"}},[s._v("#")]),s._v(" 1.准备工作")]),s._v(" "),e("p",[s._v("为此我新建了个简单的项目，用一个ViewPager包裹4个View，每个View给它一个不一样的背景色，并给ViewPager加上适配器（Adapter）。")]),s._v(" "),e("p",[s._v("准备工作就做好了（以下基础代码可跳过）")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('public void init() {\n        ViewPager viewPager = (ViewPager) findViewById(R.id.viewpager);\n        View v1 = new View(this);\n        View v2 = new View(this);\n        View v3 = new View(this);\n        View v4 = new View(this);\n        v1.setBackgroundColor(Color.parseColor("#aaabcdef"));\n        v2.setBackgroundColor(Color.parseColor("#aa000a00"));\n        v3.setBackgroundColor(Color.parseColor("#aaabc000"));\n        v4.setBackgroundColor(Color.parseColor("#aa000000"));\n\n        List<View> views = new ArrayList<View>();\n        views.add(v1);\n        views.add(v2);\n        views.add(v3);\n        views.add(v4);\n\n        viewPager.setAdapter(new AZPagerAdapter(views));\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[s._v("AZPagerAdapter的实现是比较常规的优化方法：“显示”就把View加载到父控件，“不显示”就从父控件中移除。")]),s._v(" "),e("blockquote",[e("p",[s._v("注：这里用“显示”和“不显示”表述不太确切，因为ViewPager默认会多加载前一页（-1页）和后一页（1页）作为缓存页，缓存页没有显示时也会加载到父控件且不会被移除，当缓存页移到-2页或2页时才会被移除。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public class AZPagerAdapter extends PagerAdapter {\n\n    protected List<View> views;\n\n    public AZPagerAdapter(List<View> viewList) {\n        views = viewList;\n    }\n    @Override\n    public int getCount() {\n        return views.size();\n    }\n\n    @Override\n    public boolean isViewFromObject(View view, Object o) {\n        return view == o;\n    }\n\n    @Override\n    public void destroyItem(ViewGroup container, int position, Object object) {\n        container.removeView(views.get(position));\n    }\n\n    @Override\n    public Object instantiateItem(ViewGroup container, int position) {\n        container.addView(views.get(position));\n        return views.get(position);\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("p",[s._v("现在的效果：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://ewr1.vultrobjects.com/imgspice/000/003/301/423_381_b3a.jpg",alt:"这里写图片描述"}})]),s._v(" "),e("h2",{attrs:{id:"_2-用pagetransformer来改变viewpager的切换动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-用pagetransformer来改变viewpager的切换动画"}},[s._v("#")]),s._v(" 2.用PageTransformer来改变ViewPager的切换动画")]),s._v(" "),e("p",[s._v("ViewPager有个方法叫做：")]),s._v(" "),e("p",[s._v("setPageTransformer(boolean reverseDrawingOrder, PageTransformer transformer) 用于设置ViewPager切换时的动画效果。\n"),e("img",{attrs:{src:"https://ewr1.vultrobjects.com/imgspice/000/000/255/376_76b_e1a.jpg",alt:"这里写图片描述"}})]),s._v(" "),e("p",[s._v("这里我们只要自定义一个PageTransformer来实现我们需要的动画偏移效果就好了！")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public class ScrollOffsetTransformer implements PageTransformer {\n    /** * position参数指明给定页面相对于屏幕中心的位置。它是一个动态属性，会随着页面的滚动而改变。 * 当一个页面（page)填充整个屏幕时，positoin值为0； * 当一个页面（page)刚刚离开屏幕右(左）侧时，position值为1（-1）； * 当两个页面分别滚动到一半时，其中一个页面是-0.5，另一个页面是0.5。 * 基于屏幕上页面的位置，通过诸如setAlpha()、setTranslationX()或setScaleY()方法来设置页面的属性，创建自定义的滑动动画。 */\n    @Override\n    public void transformPage(View page, float position) {\n        if (position > 0) {\n            //右侧的缓存页往左偏移100\n            page.setTranslationX(-100 * position);\n        }\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("然后在"),e("code",[s._v("init()")]),s._v("方法中最后加上")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("viewPager.setPageTransformer(true, new ScrollOffsetTransformer());\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("看下效果：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://ewr1.vultrobjects.com/imgspice/000/003/301/424_e25_928.jpg",alt:"这里写图片描述"}})]),s._v(" "),e("p",[s._v("已经可以看到后面一页内容的会偏移到前面一页来（背景色都用了半透明可以看到有叠加部分）！")]),s._v(" "),e("p",[s._v("不过有个问题，就是翻页（1页到0位置）过程中，原本处于2页的view要等到1页完全到0位置后才会突然显示（加载）出来（不是逐渐增加偏移量出来的）。这个原因其实就是刚刚讲Adapter的时候说的，ViewPager默认缓存3页（前页【"),e("code",[s._v("-1页")]),s._v("】，当前页【"),e("code",[s._v("0页")]),s._v("】，后页【"),e("code",[s._v("1页")]),s._v("】），而2页要等到1页到0位置后才会开始加载，（1页到0位置后变为0页，原来的0页变为-1页，原来的-1页被销毁）。")]),s._v(" "),e("h2",{attrs:{id:"_3-通过setoffscreenpagelimit-int-limit-来改变缓存页数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-通过setoffscreenpagelimit-int-limit-来改变缓存页数"}},[s._v("#")]),s._v(" 3.通过setOffscreenPageLimit(int limit)来改变缓存页数")]),s._v(" "),e("p",[s._v("解决上面遗留的问题也非常简单，就是改变ViewPager的默认缓存页数，使得它多缓存一页（2页）。")]),s._v(" "),e("p",[s._v("ViewPager有个方法叫做：")]),s._v(" "),e("p",[s._v("setOffscreenPageLimit(int limit) 用于设置ViewPager两边（左边和右边）各缓存的页数，默认是1，即左边和右边各缓存1页。")]),s._v(" "),e("p",[s._v("在"),e("code",[s._v("init()")]),s._v("方法最后再加上一句：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//左右各多加载2页（默认1页）\n    viewPager.setOffscreenPageLimit(2);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("看下最后效果：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://ewr1.vultrobjects.com/imgspice/000/003/301/425_d46_c36.jpg",alt:"这里写图片描述"}}),s._v("\n大功告成！现在就平滑多了！")]),s._v(" "),e("h2",{attrs:{id:"_4-彩蛋"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-彩蛋"}},[s._v("#")]),s._v(" 4.彩蛋")]),s._v(" "),e("p",[s._v("把ScrollOffsetTransformer里面稍微改一下，去掉条件判断后")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public class ScrollOffsetTransformer implements PageTransformer {\n    @Override\n    public void transformPage(View page, float position) {\n       // if (position > 0) {\n            page.setTranslationX(-100 * position);\n       // }\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("前后都偏移啦！可以开发脑洞想一下用在有趣的地方！")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://ewr1.vultrobjects.com/imgspice/000/003/301/426_0d4_92b.jpg",alt:"这里写图片描述"}})]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("源码地址：[https://github.com/Xieyupeng520/TestViewPager](javascript:void())")])])}),[],!1,null,null,null);e.default=t.exports}}]);