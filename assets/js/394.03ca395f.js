(window.webpackJsonp=window.webpackJsonp||[]).push([[394],{717:function(v,_,l){"use strict";l.r(_);var t=l(3),e=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("遍历过程:")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("首先根节点入队")])]),v._v(" "),_("li",[_("p",[v._v("每次出队时, 都将当前节点的左右孩子先后入队")])]),v._v(" "),_("li",[_("p",[v._v("如果队列为空的话, 则表示层序遍历结束\n5"),_("br"),v._v("\n/   \\"),_("br"),v._v("\n3     6"),_("br"),v._v("\n/ \\     \\"),_("br"),v._v("\n2  4      8")]),v._v(" "),_("p",[v._v("5--\x3e")])])]),v._v(" "),_("p",[v._v("[<--5]   3--\x3e  6--\x3e   (3 , 6)")]),v._v(" "),_("p",[v._v("[<--3]   2--\x3e  4--\x3e   (2 , 4)")]),v._v(" "),_("p",[v._v("[<--6]   8--\x3e         (2 , 4 , 8)")]),v._v(" "),_("p",[v._v("[<--2]   [<--4]   [<--8]")]),v._v(" "),_("p",[v._v("针对上面的二分搜索树, 详细描述一下层序遍历步骤")]),v._v(" "),_("ol",[_("li",[v._v("5入队, 队列元素 : head->[5]<-tail")]),v._v(" "),_("li",[v._v("5出队, 5的左子树3, 6入队, 由于队列是先入先出(FIFO), 所以先左后右, 队列元素 : head->[3, 6]<-tail")]),v._v(" "),_("li",[v._v("3出队, 2, 4入队, 队列元素  : head->[6, 2, 4]<-tail")]),v._v(" "),_("li",[v._v("6出队, 左孩子为空,所以8入队, 队列元素  : head->[2, 4, 8]<-tail")]),v._v(" "),_("li",[v._v("2,4,8依次出队, 由于这三个节点都是叶子节点, 无子节点, 所以这三个节点出队后队列为空, 层序遍历完成")])])])}),[],!1,null,null,null);_.default=e.exports}}]);