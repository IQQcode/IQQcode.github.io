(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{525:function(s,t,a){"use strict";a.r(t);var n=a(3),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-程序计数器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-程序计数器"}},[s._v("#")]),s._v(" 1. 程序计数器")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200625092209.png",alt:""}})]),s._v(" "),t("p",[s._v("程序计数器（Program Counter Register，也称作PC计数器）是一块很小的内存空间，可以当做是"),t("strong",[s._v("当前线程所执行字节码的行号指示器")]),s._v("。JVM中的程序计数器是对物理PC寄存器的模拟抽象。")]),s._v(" "),t("p",[s._v("【程序计数器的作用】")]),s._v(" "),t("p",[t("strong",[s._v("执行引擎的解释器在工作时就是通过改变程序计数器来选取下一条需要执行的字节码指令")])]),s._v(" "),t("p",[s._v("程序控制流的指示器，分支、循环、跳转异常处理、线程恢复等基础功能都需要依赖程序计数器完成。")]),s._v(" "),t("p",[s._v("大白话来讲，就是执行引擎解释执行字节码文件，在执行完当前行的字节码时，PC计数器会告诉执行引擎下一行在什么位置，该执行谁了。")]),s._v(" "),t("blockquote",[t("p",[s._v("PC计数器存储的是下一条指令的地址")])]),s._v(" "),t("h3",{attrs:{id:"线程私有"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程私有"}},[s._v("#")]),s._v(" 线程私有")]),s._v(" "),t("p",[s._v("我们都知道，Java虚拟机的多线程实现是通过CPU分配执行时间来对线程轮流切换执行的，也就是说在"),t("strong",[s._v("同一时刻，一个处理器只会执行一个线程中的指令")]),s._v("。")]),s._v(" "),t("p",[s._v("PC计数器存储的当前线程指令的地址，所以它是"),t("strong",[s._v("线程私有")]),s._v("的，每个线程都会有自己的PC计数器。生命周期与线程的生命周期保持一致。")]),s._v(" "),t("blockquote",[t("p",[s._v("执行本地方法时，由于是C/C++的代码，PC计数器无法记录，则是未指定值（Undefined）")])]),s._v(" "),t("h3",{attrs:{id:"不会产生oom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不会产生oom"}},[s._v("#")]),s._v(" 不会产生OOM")]),s._v(" "),t("p",[s._v("PC计数器相对于运行时数据区的其他区域来说，所占的空间很小，存放的都是地址，不会被垃圾回收")]),s._v(" "),t("p",[t("strong",[s._v("PC计数器是Runtime Data Area中唯一不会产生OOM（内存溢出）的区域")])]),s._v(" "),t("h2",{attrs:{id:"_2-程序计数器的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-程序计数器的使用"}},[s._v("#")]),s._v(" 2. 程序计数器的使用")]),s._v(" "),t("p",[s._v("我们对一段简单的程序进行测试，来验证PC计数器的内容：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200625095715.png",alt:""}})]),s._v(" "),t("p",[t("code",[s._v("Ctrl + Shift + F9")]),s._v("编译")]),s._v(" "),t("p",[s._v("编译后的字节码class")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("iqqcode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pcregister")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PCRegisterTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PCRegisterTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" var10000 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("对字节码进行反编译")]),s._v(" "),t("p",[t("code",[s._v("javap -v PCRegisterTest.class")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200625095043.png",alt:""}})]),s._v(" "),t("p",[s._v("在虚拟机字节码指令的左侧，就是PC计数器中存放的"),t("strong",[s._v("指令的偏移地址")])]),s._v(" "),t("h2",{attrs:{id:"_3-面试题考点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-面试题考点"}},[s._v("#")]),s._v(" 3. 面试题考点")]),s._v(" "),t("p",[t("strong",[s._v("Q1：为什么使用PC寄存器记录当前线程的执行地址呢？")])]),s._v(" "),t("p",[s._v("或者说"),t("strong",[s._v("使用PC寄存器存储字节码指令地址有什么用呢？")])]),s._v(" "),t("p",[t("strong",[s._v("答：记录线程的上下文环境。")]),s._v(" 当线程进行上下文切换（Context Switch）发生时，需要由操作系统保存当前线程的状态，并恢复另一个线程的状态。Java中对应的概念就是程序计数器，它的作用是记住下一条JVM指令的执行地址，是线程私有的。")]),s._v(" "),t("br"),s._v(" "),t("blockquote",[t("p",[s._v("其实这个问题我们可以类比CPU的中断处理过程，CPU在响应中断之前，为了在中断处理结束后能正确地返回到中断点，会先记录当前执行位置，即"),t("strong",[s._v("保护现场、保护断点")]),s._v("，它将断点放到了程序计数器中。")])]),s._v(" "),t("br"),s._v(" "),t("p",[s._v("我们类比操作系统中CPU的响应中断机制来说明：")]),s._v(" "),t("p",[s._v("CPU要轮番切换各个线程来调度执行，在切换当前线程之前，需要记录当前的执行位置（理解为线程的中断点）。在下次切换回当前线程后，知道接着从哪里继续执行（避免重头再执行）")]),s._v(" "),t("p",[t("font",{attrs:{color:"orange"}},[s._v("JVM的执行引擎----字节码解释器通过改变PC计数器的值来明确下一条要执行的指令。")])],1),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("Q2：PC寄存器为什么会被设定为线程私有？")])]),s._v(" "),t("p",[s._v("我们都知道，Java虚拟机的多线程实现是通过CPU分配执行时间来对线程轮流切换执行的，也就是说："),t("font",{attrs:{color:"green"}},[s._v("在同一时刻，一个处理器只会执行一个线程中的指令。")])],1),s._v(" "),t("p",[s._v("PC计数器存储当前线程指令的地址，"),t("font",{attrs:{color:"green"}},[s._v("为了保证能够准确地记录各个线程正在执行的当前字节码指令的地址")]),s._v("，所以它是"),t("strong",[s._v("线程私有")]),s._v("的，每个线程都会有自己的PC计数器。")],1)])}),[],!1,null,null,null);t.default=r.exports}}]);