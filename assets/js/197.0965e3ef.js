(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{523:function(t,s,_){"use strict";_.r(s);var i=_(3),v=Object(i.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-运行时数据区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-运行时数据区"}},[t._v("#")]),t._v(" 1. 运行时数据区")]),t._v(" "),s("p",[t._v("JVM体系结构中第二大块----"),s("strong",[t._v("运行时数据区Runtime Data Area")])]),t._v(" "),s("blockquote",[s("p",[t._v("不同的JVM对于内存的划分方式和管理机制存在着部分差异，JRockit和 IBM-J9无方法区空间，本文主要探讨HotSpot")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200623115805.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"运行时数据区内存划分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时数据区内存划分"}},[t._v("#")]),t._v(" 运行时数据区内存划分")]),t._v(" "),s("p",[t._v("JVM运行时数据区的内存划分分为五大区域：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("程序计数器（PC计数器）")])]),t._v(" "),s("li",[s("p",[t._v("本地方法栈")])]),t._v(" "),s("li",[s("p",[t._v("虚拟机栈")])]),t._v(" "),s("li",[s("p",[t._v("堆区")])]),t._v(" "),s("li",[s("p",[t._v("方法区")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200624222306.png",alt:"Rutime Data Area"}})]),t._v(" "),s("blockquote",[s("p",[t._v("JIT编译缓存可以独立划分或者放到方法区中")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("堆和方法区是"),s("strong",[t._v("线程共享")]),t._v("的，它们是依托于进程而创建存在的；")])]),t._v(" "),s("li",[s("p",[t._v("程序计数器、虚拟机栈、本地方法栈是线程私有的，每个线程独占一份")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200624225110.png",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("JIT编译缓存属于线程共享数据")])]),t._v(" "),s("p",[t._v("执行引擎中 的垃圾回收机制是针对共享数据区的，主要是针对"),s("strong",[t._v("堆区")])])])}),[],!1,null,null,null);s.default=v.exports}}]);