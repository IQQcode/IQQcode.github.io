(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{363:function(t,e,n){"use strict";n.r(e);var i=n(3),r=Object(i.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"_1-intentfilter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-intentfilter"}},[t._v("#")]),t._v(" 1. IntentFilter")]),t._v(" "),e("p",[t._v("IntentFilter表示“意图过滤器”。用于使用"),e("strong",[t._v("隐式Intent的过滤")]),t._v("，对匹配的放行，不匹配的则过滤")]),t._v(" "),e("p",[t._v("通常在AndroidManifest.xml文件中，系统组件的节点下配置：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img-2021-befo/image-20210302153129689.png",alt:"image-20210302153129689"}})]),t._v(" "),e("blockquote",[e("p",[t._v("在一些应用场景中，也可能使用程序代码配置IntentFilter,例如在广播接收者在应用中。")])]),t._v(" "),e("p",[t._v("IntentFilter对Intent的以下属性是有效的：")]),t._v(" "),e("ul",[e("li",[t._v("Action")]),t._v(" "),e("li",[t._v("Catetory")]),t._v(" "),e("li",[t._v("Data")])]),t._v(" "),e("h3",{attrs:{id:"_2-过滤action"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-过滤action"}},[t._v("#")]),t._v(" 2. 过滤Action")]),t._v(" "),e("p",[e("strong",[t._v("每个IntentFilter可以添加多个Action")]),t._v("，Intent中传入ONE、TWO、THREE任一个均可跳转")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img-2021-befo/image-20210302155059497.png",alt:"image-20210302155059497"}})]),t._v(" "),e("p",[t._v("每个action节点中name属性的值可以由开发人员自行指定，在同一个Android设备中，action的值应该是不冲突的，因此，该值通常以项目包名作为前缀。")]),t._v(" "),e("ul",[e("li",[t._v("每个IntentFilter都应该"),e("strong",[t._v("至少指定一个Action")]),t._v("，否则将阻止所有Intent")]),t._v(" "),e("li",[t._v("如果Intent对象没有指定Action属性，将不参与匹配校验")]),t._v(" "),e("li",[t._v("如果Intent对象指定的Action属性与IntentFilter中任意一个Action匹配，则放行")])]),t._v(" "),e("br"),t._v(" "),e("h3",{attrs:{id:"_3-过滤category"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-过滤category"}},[t._v("#")]),t._v(" 3. 过滤Category")]),t._v(" "),e("p",[e("strong",[t._v("每个IntentFilter可以添加多个Category")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img-2021-befo/image-20210302155711273.png",alt:"image-20210302155711273"}})]),t._v(" "),e("p",[t._v("与action节点相同，category节点中name属性的值也可以由开发人员指定，且应该是不会发生冲突的")]),t._v(" "),e("p",[t._v("开发人员可以不为Intent对象指定Category,也可以指定多个Category。Android系统必然会为每个Intent对象添加默认的Category，即："),e("code",[t._v("android.intent.category.DEFAULT")])]),t._v(" "),e("p",[t._v("在过滤规则中，Intent中的每个Category在IntentFilter中都能被找到，则放行，否则将阻止，即，放行的条件为：")]),t._v(" "),e("ul",[e("li",[t._v("IntentFilter中有默认的Category;")]),t._v(" "),e("li",[t._v("IntentFilter中的Category,对比Intent中的Category,只能多，不能少。")])]),t._v(" "),e("br"),t._v(" "),e("h3",{attrs:{id:"_4-过滤data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-过滤data"}},[t._v("#")]),t._v(" 4. 过滤Data")]),t._v(" "),e("p",[e("strong",[t._v("每个IntentFilter可以添加多个Data")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img-2021-befo/image-20210302160444380.png",alt:"image-20210302160444380"}})]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("android:mimeType")]),t._v("属性中指定MIME类型时，可以使用通配符，例如：text/*、 video/*等。")])]),t._v(" "),e("li",[e("p",[t._v("每个URI的完整格式为："),e("code",[t._v("scheme://host:port/path")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("在IntentFilter中配置Data时，以属性都是可选的，但它们相互并不独立")])]),t._v(" "),e("h4",{attrs:{id:"uri是否匹配-只匹配指定的字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uri是否匹配-只匹配指定的字段"}},[t._v("#")]),t._v(" URI是否匹配（只匹配指定的字段）")]),t._v(" "),e("ul",[e("li",[t._v("如果在IntentFilter中仅指定了"),e("code",[t._v("scheme")]),t._v(",则任意相同scheme的Uri均匹配，无视host、port、path部分；")]),t._v(" "),e("li",[t._v("如果在IntentFilter中指定了"),e("code",[t._v("scheme")]),t._v(" 和 "),e("code",[t._v("host")]),t._v(",则任意相同scheme和host的Uri均匹配，无视port、path部分；")]),t._v(" "),e("li",[t._v("如果在IntentFilter中指定了"),e("code",[t._v("scheme")]),t._v("、"),e("code",[t._v("host")]),t._v("、"),e("code",[t._v("port")]),t._v(",则任意相同scheme、host、port的Uri均匹配，无视path部分；")]),t._v(" "),e("li",[t._v("如果在IntentFilter中指定了完整的"),e("code",[t._v("Uri各部分")]),t._v("，则要求被验证的Uri也完全匹配")])]),t._v(" "),e("h4",{attrs:{id:"data过滤规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data过滤规则"}},[t._v("#")]),t._v(" Data过滤规则")]),t._v(" "),e("p",[t._v("Data的两个重要属性："),e("strong",[t._v("Uri")]),t._v(" 和 "),e("strong",[t._v("MIME")]),t._v("，"),e("strong",[t._v("IntentFilter中根据Uri可以推断出MIME")])]),t._v(" "),e("p",[e("strong",[t._v("【过滤时】：Intent对象必须和IntentFilter中指定的属性保持一致则放行")])]),t._v(" "),e("ul",[e("li",[t._v("如果Intent没有指定Uri和MIME,仅当IntentFilter也没有指定Uri和MIME时放行；")]),t._v(" "),e("li",[t._v("如果Intent中指定了Uri,但没有指定MIME,且根据Uri无法推断MIME,仅当IntentFilter指定了相同的Uri且没有指定MIME时放行；")]),t._v(" "),e("li",[t._v("如果Intent中没有指定Uri,但指定了MIME,仅当IntentFilter也没有指定Uri且指定了相同的MIME时放行；")]),t._v(" "),e("li",[t._v("如果Intent中同时指定了Uri和MIME,仅当IntentFilter中也指定了相同的Uri和MIME时放行，或IntentFilter中没有指定MIME，但根据Uri可以推断出MIME时放行")])]),t._v(" "),e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("p",[t._v("IntentFilter可以指定Action、Category、Data来检验是否匹配，匹配的Intent将放行，否则阻止")]),t._v(" "),e("p",[t._v("【放行规则如下】")]),t._v(" "),e("ul",[e("li",[t._v("Action：Intent对象中的Action(最多一个)，在IntentFilter中可被找到")]),t._v(" "),e("li",[t._v("Category：Intent对象中所有的Category在IntentFilter中都可以找到，且Intent对象中必然有"),e("code",[t._v("android.intent.category.DEFAULT")]),t._v("这个Category")])])])}),[],!1,null,null,null);e.default=r.exports}}]);