(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{539:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"【引言】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【引言】"}},[t._v("#")]),t._v(" 【引言】")]),t._v(" "),s("p",[t._v("这一切的一切，还得从一个叫"),s("code",[t._v("volatile")]),t._v("的关键字说起")]),t._v(" "),s("p",[t._v("【灵魂拷问开始】")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("面试官：Java并发这块了解的怎么样？说说你对volatile关键字的理解？")])]),t._v(" "),s("li",[s("p",[t._v("面试官：能不能详细说下什么是内存可见性，什么又是指令重排序呢？")])]),t._v(" "),s("li",[s("p",[t._v("面试官：volatile怎么保证可见性的？多个线程之间的可见性，你能讲一下底层原理是怎么实现的吗？")])]),t._v(" "),s("li",[s("p",[t._v("面试官：volatile关键字是怎么保证有序性的？")])]),t._v(" "),s("li",[s("p",[t._v("面试官：volatile能保证可见性和有序性，但是能保证原子性吗？为什么？")])]),t._v(" "),s("li",[s("p",[t._v("面试官：了解过JMM内存模型吗？简单的讲讲")])])]),t._v(" "),s("p",[t._v("到这里，我的眼里已是常含泪水了。不是因为我对代码爱的深沉，而是因为我菜的真诚！")]),t._v(" "),s("p",[t._v("没事，不就是个破"),s("code",[t._v("volatile")]),t._v("吗？别念了，我学习还不行吗！")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("PS：")]),t._v(" 文章的内容是我看视频，博客，查资料的理解。在这一块可能很多人的理解有所不同，小编我尚无工作经验，只是总结研究来学习，做个面试题的记录。文章内容从理解到查资料学习再到画图写出来，肝了挺长时间的吧。大家当做一篇面筋来看就好，主要是回答面试问题，至于深入到底层通过字节码汇编等来通过代码说明，俺还在研究中。本文只是比较浅显的发现问题，解决问题的。不做实际的工作开发。如有不正请立即指出。")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_1-多核并发缓存架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-多核并发缓存架构"}},[t._v("#")]),t._v(" 1. 多核并发缓存架构")]),t._v(" "),s("p",[t._v("缓存Cache设置的目的是为了解决磁盘和CPU速度不匹配的问题。但是，对于CPU来说，Cache还是不够快，缓存的概念再次被扩充，不仅在内存和磁盘之间也有Cache（磁盘缓存），而且在CPU和主内存之间有Cache（CPU缓存），乃至在硬盘与网络之间也有某种意义上的Cache──称为"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Internet",target:"_blank",rel:"noopener noreferrer"}},[t._v("Internet"),s("OutboundLink")],1),t._v("临时文件夹或网络内容缓存等。凡是位于速度相差较大的两种"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%A1%AC%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("硬件"),s("OutboundLink")],1),t._v("之间，用于协调两者数据传输速度差异的结构，均可称之为Cache。")]),t._v(" "),s("h3",{attrs:{id:"cpu缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cpu缓存"}},[t._v("#")]),t._v(" CPU缓存")]),t._v(" "),s("p",[t._v("CPU缓存（Cache Memory）是位于CPU与内存之间的临时存储器，它的容量比内存小的多。但是交换速度却比内存要快得多。缓存大小是CPU的重要指标之一，而且缓存的结构和大小对CPU速度的影响非常大，CPU内缓存的运行频率极高，一般是和处理器同频运作，工作效率远远大于系统内存和硬盘。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611160728.png",alt:""}})]),t._v(" "),s("p",[t._v("CPU缓存可以分为三级：")]),t._v(" "),s("p",[s("strong",[t._v("一级缓存L1")])]),t._v(" "),s("p",[t._v("一级缓存（Level 1 Cache）简称L1 Cache，位于CPU内核的旁边，是与CPU结合最为紧密的CPU缓存。一般来说，一级缓存可以分为一级数据缓存（Data Cache，D-Cache）和一级指令缓存（Instruction Cache，I-Cache）")]),t._v(" "),s("p",[s("strong",[t._v("二级缓存L2")])]),t._v(" "),s("p",[t._v("L2 Cache（二级缓存）是CPU的第二层高速缓存，分内部和外部两种芯片。内部的芯片二级缓存运行速度与主频相同，而外部的二级缓存则只有主频的一半。L2高速缓存容量也会影响CPU的性能，原则是越大越好。")]),t._v(" "),s("p",[s("strong",[t._v("三级缓存L3")])]),t._v(" "),s("p",[t._v("三级缓存是为读取二级缓存后未命中的数据设计的—种缓存，在拥有三级缓存的CPU中，只有约5%的数据需要从内存中调用，这进一步提高了CPU的效率。")]),t._v(" "),s("p",[t._v("任务管理器查看CPU缓存使用情况:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611161735.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611162915.png",alt:""}})]),t._v(" "),s("p",[t._v("所以说，在我们的程序执行时，在CPU和Cache之间，是通过CPU缓存来做交互的。CPU从CPU缓存读取数据，CPU缓存从内存中读取数据；CPU将计算完的数据写回到CPU缓存中，然后CPU缓存再同步回内存中，内存再写回到磁盘中。")]),t._v(" "),s("h3",{attrs:{id:"jmm内存模型简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jmm内存模型简介"}},[t._v("#")]),t._v(" JMM内存模型简介")]),t._v(" "),s("p",[t._v("JMM（Java Memory Model）, 是Java虚拟机平台对开发者提供的多线程环境下的内存可见性、是否可以重排序等问题的无关具体平台的统一的保证。")]),t._v(" "),s("p",[t._v("JMM定义了一个"),s("strong",[t._v("线程与主存")]),t._v("之间的"),s("strong",[t._v("抽象关系")]),t._v("，它就像我们的数据结构中的逻辑结构一样，只是概念性的东西，并不是真实存在的，但是能够让我们更好的理解多线程的底层原理。")]),t._v(" "),s("blockquote",[s("p",[t._v("首先，一定要先明确一个概念：CPU的运算是非常非常快的，和其他硬件不在一个量级上。")])]),t._v(" "),s("p",[t._v("Java内存模型类比于上面硬件的内存模型，它是基于"),s("strong",[t._v("CPU缓存模型")]),t._v("来构建的。")]),t._v(" "),s("p",[t._v("每一个线程在操作共享变量的时候，都将共享变量拷贝一份到自己的工作区间中（因为如果多个线程同时在内存中操作数据，就像CPU与内存直接交互一样，速度非常慢），等到当前线程的CPU运算完之后，在写回主内存。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611170126.png",alt:""}})]),t._v(" "),s("p",[t._v("如果此时一个共享变量发生了改变，为了保证数据一致性，就必须立刻通知其他线程这个共享变量的值发生了改变，让其他线程工作内存中的副本更新，保证拿到的数据是一致的。")]),t._v(" "),s("p",[t._v("在这通知之间，线程之间就必然会有联系和沟通")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611170339.png",alt:""}})]),t._v(" "),s("p",[t._v("就好比两个人"),s("strong",[t._v("同时")]),t._v("拿着"),s("strong",[t._v("同一张")]),t._v("银行卡到银行取钱，卡里有100块，一个人取了50，账户余额立即就变成了50。虽然两人是同时同步并行取钱，但是第二个人是在这50的基础上来取钱的，不可能还在100的基础上取钱。")]),t._v(" "),s("p",[t._v("那么，Java是怎么保证银行卡的余额立即变为50，并且是做了什么操作来保证余额的正确性呢？")]),t._v(" "),s("h2",{attrs:{id:"_2-jmm内存模型验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-jmm内存模型验证"}},[t._v("#")]),t._v(" 2. JMM内存模型验证")]),t._v(" "),s("h3",{attrs:{id:"volatile验证内存模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile验证内存模型"}},[t._v("#")]),t._v(" volatile验证内存模型")]),t._v(" "),s("p",[t._v("来，整一段代码再唠......")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @Author: Mr.Q\n * @Date: 2020-06-10 09:47\n * @Description:JMM内存模型验证--volatile保证可见性测试\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VolatileVisibilityTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此处是否添加volatile,来验证内存模型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" initFlag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"等待数据中...."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("initFlag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--------------success-----------"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n准备数据中...."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        initFlag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此处为第30行代码")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"initFlag = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" initFlag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"数据准备完成！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br")])]),s("p",[t._v("首先，一个线程在等待数据，"),s("code",[t._v("initFlag")]),t._v("初始值为false，"),s("code",[t._v("！initFlag")]),t._v("进入到死循环中卡在此处。")]),t._v(" "),s("p",[t._v("另一个线程准备数据，将"),s("code",[t._v("initFlag")]),t._v("置为true。")]),t._v(" "),s("p",[t._v("由于是静态的成员共享变量，修改之后等待的线程能够感知到，此时跳出死循环，打印信息，程序运行结束。")]),t._v(" "),s("p",[t._v("但是，真的是这样吗？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611173929.png",alt:""}})]),t._v(" "),s("p",[t._v("我们发现并没有，此时程序依然处于死循环中，即"),s("code",[t._v("initFlag")]),t._v("依然为"),s("strong",[t._v("false")])]),t._v(" "),s("p",[t._v("咦，这是怎么肥四呢？")]),t._v(" "),s("p",[t._v("单线程下跑，是没有问题的。可这是在多线程中，问题就来了。")]),t._v(" "),s("p",[t._v("这也就间接验证了JMM的存在，即每个线程在工作时，都会将共享数据拷贝到自己的工作内存来操作。如果不是的话，此处多线程下执行也不会出现问题。")]),t._v(" "),s("p",[t._v("这时，那个男人，那个叫"),s("code",[t._v("volatile")]),t._v("的蓝人，它基情满满的向我们走来了！")]),t._v(" "),s("p",[t._v("共享变量不一致是吧？操作没了可见性是吧？来吧，这种小事就交给我吧宝贝，么么哒😘")]),t._v(" "),s("p",[t._v("我们想要达到这样的效果：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" initFlag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("用"),s("code",[t._v("volatile")]),t._v("修饰"),s("code",[t._v("initFlag")]),t._v("变量，只要有线程做了修改，其他线程立即可以感知。")]),t._v(" "),s("p",[t._v("正确的运行结果，让打印出成功信息。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611173952.png",alt:""}})]),t._v(" "),s("p",[t._v("问题是解决了。这时，面试官不厚道的笑了🙃。")]),t._v(" "),s("p"),t._v(" "),s("h3",{attrs:{id:"jmm内存模型8大原子操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jmm内存模型8大原子操作"}},[t._v("#")]),t._v(" JMM内存模型8大原子操作")]),t._v(" "),s("p",[t._v("8大原子操作大家可能都有了解，但是具体到在底层是怎么交互的？每个原子操作之间的关系是怎样的？并没有很详细的说明。")]),t._v(" "),s("p",[t._v("那么，我们通过上面的程序来具体做个底层原理的分析，这也是能够讲清楚"),s("code",[t._v("volatile")]),t._v("关键字保证可见性最直观的说明了！")]),t._v(" "),s("p",[s("strong",[t._v("【JMM内存模型8大原子操作】")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611221105.png",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("read读取：")]),t._v(" 从主内存中读取数据")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("load载入：")]),t._v(" 将主内存读取到的数据写入工作内存")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("use使用：")]),t._v(" 从工作内存读取出数据来计算")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("assign赋值：")]),t._v(" 将CPU计算出的值重新赋值到工作内存中")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("store存储：")]),t._v(" 将工作内存中更改后的值写入到主存")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("write写入：")]),t._v(" 将store回去的变量赋值给主存中的变量")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("lock锁定：")]),t._v(" 将主内存变量加锁，标识为线程独占状态")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("unlock解锁：")]),t._v(" 将主内存变量解锁，解锁后其他线程才能再次锁定该变量")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611231806.png",alt:""}})]),t._v(" "),s("p",[t._v("还是上面程序的代码，针对上述程序出现的问题，我们来做个深入的分析了解：有图有真相😒")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200611215100.png",alt:""}})]),t._v(" "),s("p",[t._v("我们先来分析【线程1】：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首先，线程1将主内存中的"),s("code",[t._v("initFlag = false")]),t._v(" read出来；")])]),t._v(" "),s("li",[s("p",[t._v("其次，将"),s("code",[t._v("initFlag = false")]),t._v(" 拷贝一份到线程的工作内存中；")])]),t._v(" "),s("li",[s("p",[t._v("然后，CPU将线程工作内存（CPU缓存）中的数据拿到自己的寄存器中来计算。")])])]),t._v(" "),s("p",[t._v("此时，"),s("code",[t._v("！initFlag")]),t._v("为真，线程1阻塞在死循环中，等待数据中......")]),t._v(" "),s("p",[t._v("对于【线程2】：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("前三步完全和线程1的操作一样，每个线程都是这么干的.")])]),t._v(" "),s("li",[s("p",[t._v("线程2中调用了prepareData方法使"),s("code",[t._v("initFlag = true")])])]),t._v(" "),s("li",[s("p",[t._v("然后CPU将改变后的值重新赋值到工作内存中，此时线程2的工作内存中"),s("code",[t._v("initFlag = true")])])]),t._v(" "),s("li",[s("p",[t._v("线程2的工作内存存储了true，并准备更新回主存中")])]),t._v(" "),s("li",[s("p",[t._v("线程2执行write操作，将"),s("code",[t._v("initFlag = true")]),t._v("写回到主存中")])])]),t._v(" "),s("p",[t._v("此时，主存中存放的是"),s("code",[t._v("initFlag = true")]),t._v("。而线程1的工作内存中任然是"),s("code",[t._v("initFlag = false")]),t._v("。就是线程2把initFalg改了，线程1还不知道，仍然拿的是原来的值，导致程序一直处在死循环中。这就是程序为什么卡在了这里的原因！")]),t._v(" "),s("p",[t._v("那后来加上了"),s("code",[t._v("volatile")]),t._v("关键字，它是怎么保证线程2改完initFlag后，线程1立马就知道了呢？换句话来说，线程2更改完initFlag后，是怎么让线程1的工作内存中拷贝的副本也立即更新呢？")]),t._v(" "),s("h2",{attrs:{id:"_3-jmm缓存不一致问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-jmm缓存不一致问题"}},[t._v("#")]),t._v(" 3. JMM缓存不一致问题")]),t._v(" "),s("p",[t._v("就像上面图解的情况一样，JMM出现了缓存不一致新的问题，即线程2修改完initFlag之后，线程1工作内存中的副本和主存中不一致的问题。")]),t._v(" "),s("p",[t._v("那么，大佬们是如何解决这个问题的呢？")]),t._v(" "),s("p",[t._v("8个原子操作，这不还剩"),s("code",[t._v("lock")]),t._v("和"),s("code",[t._v("unlock")]),t._v("么！他俩呀，就干这事的！")]),t._v(" "),s("h3",{attrs:{id:"总线加锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总线加锁"}},[t._v("#")]),t._v(" 总线加锁")]),t._v(" "),s("p",[t._v("起初，是通过对数据在总线上加锁来实现的：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200612081921.png",alt:""}})]),t._v(" "),s("p",[t._v("一个线程在修改数据时，会加一把"),s("code",[t._v("lock")]),t._v("锁到总线上。此时，其他线程就不能再去读取数据了，等到线程2将数据修改完写回到主存，然后"),s("code",[t._v("unlock")]),t._v("释放锁，然后其他线程才能够读取。")]),t._v(" "),s("p",[t._v("这样，当然保证了其他线程拿到了最新的数据，数据一致性得到保证了，但是多核并行的操作，在加锁之后变成了单核串型的了，效率低下。就这样的速度，能叫并发吗？这还怎么过双十一呀🤣！")]),t._v(" "),s("h3",{attrs:{id:"mesi缓存一致性协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mesi缓存一致性协议"}},[t._v("#")]),t._v(" MESI缓存一致性协议")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/MESI%E5%8D%8F%E8%AE%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("MESI协议"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("多个CPU从主内存读取同一个数据到各自的高速缓存，当其中某个CPU修改了缓存里的数据，该"),s("strong",[t._v("数据会马上同步回主内存")]),t._v("，其它CPU通过"),s("strong",[t._v("总线侦听机制")]),t._v("可以感知到数据的变化，从而将自己缓存里的数据失效。")]),t._v(" "),s("p",[s("strong",[t._v("总线侦听：")])]),t._v(" "),s("p",[t._v("当几个缓存共享特定数据并且处理器修改共享数据的值时，更改必须传播到所有其他具有数据副本的缓存中。这种变化的传播可以防止系统违反"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cache_coherence",title:"缓存一致性",target:"_blank",rel:"noopener noreferrer"}},[t._v("高速缓存一致性"),s("OutboundLink")],1),t._v("。可以通过总线侦听来完成数据更改的通知。"),s("strong",[t._v("所有侦听器都会监视总线上的每笔交易。如果修改共享缓存块的事务出现在总线上，则所有侦听器都会检查其缓存是否具有共享块的相同副本。如果缓存具有共享块的副本，则相应的窥探器将执行操作以确保缓存一致性")]),t._v("。该动作可以是"),s("a",{attrs:{href:"https://forums.xilinx.com/t5/Embedded-Development-Tools/what-is-the-difference-between-cache-invalidate-and-cache-flush/td-p/74654",target:"_blank",rel:"noopener noreferrer"}},[t._v("刷新"),s("OutboundLink")],1),t._v("或"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cache_invalidation",title:"缓存失效",target:"_blank",rel:"noopener noreferrer"}},[t._v("无效"),s("OutboundLink")],1),t._v("缓存块。它还依赖于缓存一致性协议来改变缓存块状态。")]),t._v(" "),s("p",[t._v("MESI缓存一致性协议，通过对总线的侦听机制，很好地解决了这个问题。")]),t._v(" "),s("blockquote",[s("p",[t._v("没错，硬件！就是这么硬核且高效。")])]),t._v(" "),s("p",[t._v("【简单总结一下】：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200612085809.png",alt:""}})]),t._v(" "),s("p",[t._v("总线上安装了多个监听器，发现有线程修改了内存中的数据，就会使其他线程工作区间不一致的副本"),s("strong",[t._v("立即失效")]),t._v("，然后让他们重新并行读取。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_4-volatile可见性底层实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-volatile可见性底层实现原理"}},[t._v("#")]),t._v(" 4. volatile可见性底层实现原理")]),t._v(" "),s("p",[t._v("上面讲了硬件层面上的实现，那么，软件上是怎么实现的呢？")]),t._v(" "),s("p",[t._v("有了总线监听器，我们可以检测到线程修改数据的行为。但是，线程2修改了数据，监听器也检测到了，线程1是怎么知道并且修改的呢？")]),t._v(" "),s("p",[t._v("我们都知道，线程间各自工作都是独立的，线程2修改了数据，并不会告诉线程1我修改了。数据都在内存上，大家共有的，我修改凭什么要告诉你😒？换句话来说，他们都是通过主存来沟通交互的。")]),t._v(" "),s("p",[t._v("那么，"),s("code",[t._v("volatile")]),t._v("关键字是怎么保证修改的可见性的呢？")]),t._v(" "),s("blockquote",[s("p",[t._v("volatile的代码是用更加底层的C/C++代码来实现的")])]),t._v(" "),s("p",[t._v("底层的实现，主要是通过汇编"),s("code",[t._v("lock")]),t._v("前缀指令，它会锁定内存区域的缓存（缓存行锁定），并写回到主内存中。")]),t._v(" "),s("h3",{attrs:{id:"保证可见性原理验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保证可见性原理验证"}},[t._v("#")]),t._v(" 保证可见性原理验证")]),t._v(" "),s("p",[t._v("我们对程序做反汇编，查看汇编代码：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200612093014.png",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("由于汇编代码比较长，虽然俺学了微机原理，但真的是看不懂😭。就挑最重要的一句摘录出来解释")])]),t._v(" "),s("p"),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0000000002c860bf")]),t._v("：lock add dword ptr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rsp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Oh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("putstatic initFlag \n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("iqqcode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jmm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("VolatileVisibilityTest")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareData")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("对应代码为")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("initFlag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("A-32架构软件开发者手册对lock指令的解释：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("会将当前处理器缓存行的数据"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("立即")])]),t._v("写回到系统内存")],1)]),t._v(" "),s("li",[s("p",[t._v("这个写回内存的操作会引起在其他CPU里缓存了该内存地址的数据无效")])])]),t._v(" "),s("p",[t._v("就是通过"),s("code",[t._v("lock")]),t._v("指令，让initFlag立即写回内存，且让其他线程中的副本失效。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200612111249.png",alt:""}})]),t._v(" "),s("p",[t._v("相比于此前在总线上加的重量级锁，"),s("code",[t._v("lock")]),t._v("指令只是在会写主内存时加了锁，就是从store操作开始才加锁，而此前的总线上加锁是从read就开始了。一旦写回，立即"),s("code",[t._v("unlock")]),t._v("释放锁。由于CPU的读写是非常快的，这个过程是非常非常之短的。所以"),s("code",[t._v("volatile")]),t._v("是轻量级的锁，性能高。")]),t._v(" "),s("p",[s("strong",[t._v("Q：如果不加 lock - unlock 指令会怎样？")])]),t._v(" "),s("p",[t._v("线程2在store到write之间，这时"),s("code",[t._v("initFlag = true")]),t._v("被CPU修改了值但是还没有写回主内存，总线监听机制发现了数检测的据被修改，立即使线程1工作内存的副本失效，线程1再次去读取initFlag，但此时由于没有加锁并且还没来得及修改"),s("code",[t._v("initFlag = false")]),t._v("这个脏数据，线程1又将"),s("code",[t._v("initFlag = false")]),t._v("错误的数据拷贝到工作内存中，还是处于死循环中，依然会存在问题。")]),t._v(" "),s("p",[t._v("所以，必须要在store和write之间加上"),s("strong",[t._v("lock")]),t._v("和"),s("strong",[t._v("unlock")]),t._v("，防止时间差带来的误读。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200612113235.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("volatile")]),s("strong",[t._v("保证可见性与有序性")]),t._v("，但是"),s("font",{attrs:{color:"red"}},[t._v("不保证证原子性")]),t._v("，保证原则性需要借助"),s("code",[t._v("synchronized")]),t._v("这样的锁机制")],1),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_5-volatile不保证原子性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-volatile不保证原子性"}},[t._v("#")]),t._v(" 5. volatile不保证原子性")]),t._v(" "),s("h3",{attrs:{id:"不保证原子性验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不保证原子性验证"}},[t._v("#")]),t._v(" 不保证原子性验证")]),t._v(" "),s("p",[t._v("还是通过代码来说明问题：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @Author: Mr.Q\n * @Date: 2020-06-11 11:04\n * @Description:volatile不保证原子性测试\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VolatileAtomicityTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" threads "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" threads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            threads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            threads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//主线程阻塞，等待线程数组中的10个线程执行完再继续执行")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" threads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// num <= 1000 * 10")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br")])]),s("blockquote",[s("p",[t._v("结果：num <= 10000")])]),t._v(" "),s("p",[t._v("此时此刻，我已对并发编程的代码彻底干懵🙂，含着泪，继续往下学习！")]),t._v(" "),s("p",[t._v("按道理来说结果是10000，但是运行下很可能是个小于10000的值。")]),t._v(" "),s("p",[t._v("咦？volatile不是保证了可见性啊，一个线程对num的修改，另外一个线程应该立刻看到啊！")]),t._v(" "),s("p",[t._v("可是这里的操作"),s("code",[t._v("num++")]),t._v("是个复合操作，包括读取num的值，对其自增，然后再写回主存。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200612145854.png",alt:""}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("假设线程1，读取了num的值为0，线程2刚好和线程2是同步操作，也为num=0；")])]),t._v(" "),s("li",[s("p",[t._v("他俩都对num做了+1操作，"),s("strong",[t._v("同时")]),t._v("准备"),s("code",[t._v("write")]),t._v("会主内存。")])]),t._v(" "),s("li",[s("p",[t._v("看谁先通过总线(包括同时通过)")])]),t._v(" "),s("li",[s("p",[t._v("假设是线程1先通过。MESI会将线程2工作内存中"),s("code",[t._v("num = 1")]),t._v("的副本立刻置位无效，此时线程1已将"),s("code",[t._v("num = 0 --\x3e 1")]),t._v("修改，"),s("code",[t._v("num = 1")])])]),t._v(" "),s("li",[s("p",[t._v("线程2只能再次重新读取"),s("code",[t._v("num = 1")]),t._v("，然后执行加一再回写主内存。"),s("code",[t._v("num = 2")]),t._v("，但是却执行了三次循环，此时"),s("code",[t._v("i = 3")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("如果线程1和线程2同时通过，由于他们工作内存中num均为1，所以还是执行了3次循环而num自增了2次")])]),t._v(" "),s("p",[t._v("这就是num < 10000的原因。如果没有出现上述情况，num = 10000")]),t._v(" "),s("h3",{attrs:{id:"【问题解决】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【问题解决】"}},[t._v("#")]),t._v(" 【问题解决】")]),t._v(" "),s("p",[s("strong",[t._v("1. 同步加锁解决volatile原子性问题")])]),t._v(" "),s("p",[t._v("第一种补救措施很简单，就是简单粗暴的的加锁，这样可以保证给num加1这个方法是同步的，这样每个线程就会井然有序的运行，而保证了最终的num数和预期值一致。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200613090737.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("2. CAS解决volatile原子性问题")])]),t._v(" "),s("p",[t._v("针对"),s("code",[t._v("num++")]),t._v("这类复合类的操作，可以使用JUC并发包中的原子操作类，原子操作类是通过循环"),s("strong",[t._v("CAS")]),t._v("的方式来保证其原子性的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200613090919.png",alt:""}})]),t._v(" "),s("p",[t._v("AtomicInteger这是个基于CAS的无锁技术，它的主要原理就是通过比较预期值和实际值，当其没有异常的以后，就进行增值操作。"),s("code",[t._v("incrementAndGet")]),t._v("这个方法实际上每次对num进行+1的过程都进行了比较，存在一个retry的过程。它在多线程处理中可以防止这种多次递增而引发的线程不安全的问题")]),t._v(" "),s("h2",{attrs:{id:"_6-volatile保证有序性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-volatile保证有序性"}},[t._v("#")]),t._v(" 6. volatile保证有序性")]),t._v(" "),s("p",[t._v("volatile保证有序性，就是禁止编译器在编译阶段对指令的重排序问题。")]),t._v(" "),s("h3",{attrs:{id:"volatile禁止指令重排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile禁止指令重排序"}},[t._v("#")]),t._v(" volatile禁止指令重排序")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VolatileSeriaTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此处a,b变量是否添加volatile来修饰")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" set "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashSet")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" one "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" two "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" --\x3e i = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br")])]),s("p",[t._v("我们可以看到，程序一共跑出了四种情况：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200613080900.png",alt:""}})]),t._v(" "),s("p",[t._v("这三种情况，我们很容易想到")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200613081920.png",alt:""}})]),t._v(" "),s("p",[t._v("但是出现了"),s("code",[t._v("x=0")]),t._v("，"),s("code",[t._v("y=0")]),t._v("就不正常了，原因就是编译器对程序作了指令重排序")]),t._v(" "),s("p",[t._v("当两个线程以")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("x = a；")])]),t._v(" "),s("li",[s("p",[t._v("a = 1;")])]),t._v(" "),s("li",[s("p",[t._v("y = b;")])]),t._v(" "),s("li",[s("p",[t._v("b = 1;")])])]),t._v(" "),s("p",[t._v("顺序来执行，就会出现"),s("code",[t._v("x=0")]),t._v("，"),s("code",[t._v("y=0")]),t._v("这种特殊情况，这是单线程下现象不到的情景。")]),t._v(" "),s("blockquote",[s("p",[t._v("CPU指令重排序的定义为：CPU允许在"),s("strong",[t._v("某些条件")]),t._v("下进行"),s("strong",[t._v("指令重排序")]),t._v("，仅需保证"),s("strong",[t._v("重排序后单线程下的语义一致")])])]),t._v(" "),s("p",[t._v("保证的是单线程下的语义一致，多线程时是不保证的，所以就需要"),s("code",[t._v("volatile")]),t._v("来禁止指令重排序了。")]),t._v(" "),s("p",[t._v("那到底是怎么禁止的呢？")]),t._v(" "),s("blockquote",[s("p",[t._v("这里只是简单的说明问题，深入的源码分析研究，大家看看源码查查资料吧。")]),t._v(" "),s("ul",[s("li",[t._v("附上一篇参考文章，文章中做了x = 0，y = 0这种情况的讲解")]),t._v(" "),s("li",[t._v("《"),s("a",{attrs:{href:"https://www.jianshu.com/p/068ca23c38ba",target:"_blank",rel:"noopener noreferrer"}},[t._v("指令重排序与volatile关键字"),s("OutboundLink")],1),t._v("》")])])]),t._v(" "),s("p",[t._v("这个涉及到内存屏障(Memory Barrier)")]),t._v(" "),s("h3",{attrs:{id:"内存屏障简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存屏障简介"}},[t._v("#")]),t._v(" 内存屏障简介")]),t._v(" "),s("p",[s("strong",[t._v("内存屏障有两个能力：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("就像一套栅栏分割前后的代码，阻止栅栏前后的没有数据依赖性的代码进行指令重排序，保证程序在一定程度上的有序性。")])]),t._v(" "),s("li",[s("p",[t._v("强制把写缓冲区/高速缓存中的脏数据等写回主内存，让缓存中相应的数据失效，保证数据的可见性。")])])]),t._v(" "),s("p",[t._v("首先，指令并不是代码行，指令是原子的，通过"),s("code",[t._v("javap")]),t._v("命令可以看到一行代码编译出来的指令，当然，像"),s("code",[t._v("int i=1;")]),t._v("这样的代码行也是原子操作。")]),t._v(" "),s("p",[t._v("在单例模式中，"),s("code",[t._v("Instance ins = new Instance();")]),t._v("   就不是原子操作，它可以分成三步原子指令：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("分配内存地址；")])]),t._v(" "),s("li",[s("p",[t._v("new一个Instance对象；")])]),t._v(" "),s("li",[s("p",[t._v("将内存地址赋值给ins；")])])]),t._v(" "),s("p",[t._v("CPU为了提高执行效率，这三步操作的顺序可以是123，也可以是132。")]),t._v(" "),s("p",[t._v("如果是132顺序的话，当把内存地址赋给inst后，ins指向的内存地址还没有new出来单例对象，这时候，如果拿到ins的话，其实就是空的，会报空指针异常。")]),t._v(" "),s("p",[t._v("这就是为什么"),s("strong",[t._v("双重检查单例模式(DCL)")]),t._v(" 中，单例对象要加上volatile关键字。")]),t._v(" "),s("p"),t._v(" "),s("p",[s("strong",[t._v("内存屏障有三种类型和一种伪类型：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("lfence：即读屏障(Load Barrier)，在读指令前插入读屏障，可以让高速缓存中的数据失效，重新从主内存加载数据，以保证读取的是最新的数据。")])]),t._v(" "),s("li",[s("p",[t._v("sfence：即写屏障(Store Barrier)，在写指令之后插入写屏障，能让写入缓存的最新数据写回到主内存，以保证写入的数据立刻对其他线程可见。")])]),t._v(" "),s("li",[s("p",[t._v("mfence，即全能屏障，具备ifence和sfence的能力。")])]),t._v(" "),s("li",[s("p",[t._v("[ ] Lock前缀：Lock不是一种内存屏障，但是它能完成类似全能型内存屏障的功能。")])])]),t._v(" "),s("p",[s("code",[t._v("volatile")]),t._v("会给代码添加一个内存屏障，指令重排序的时候不会把后面的指令重排序到屏障的位置之前")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://iqqcode-blog.oss-cn-beijing.aliyuncs.com/img/20200613084031.png",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("PS😐：只有一个CPU的时候，这种内存屏障是多余的。只有多个CPUI访问同一块内存的时候，就需要内存屏障了。")])]),t._v(" "),s("h3",{attrs:{id:"jmm的happens-before原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jmm的happens-before原则"}},[t._v("#")]),t._v(" JMM的Happens-Before原则")]),t._v(" "),s("p",[t._v("Happens-Before 是java内存模型中的语义规范，来阐述操作之间内存的可见性，可以确保一条语句的所有“写内存”操作对另一条语句是可见的。")]),t._v(" "),s("p",[s("strong",[t._v("Happens-Before原则如下：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("程序次序规则：一个线程内，按照代码顺序，书写在前面的操作先行发生于书写在后   面的操作；")])]),t._v(" "),s("li",[s("p",[t._v("锁定规则：一个unLock操作先行发生于后面对同一个锁额lock操作；")])]),t._v(" "),s("li",[s("p",[t._v("volatile变量规则：对一个变量的写操作先行发生于后面对这个变量的读操作；")])]),t._v(" "),s("li",[s("p",[t._v("传递规则：如果操作A先行发生于操作B，而操作B又先行发生于操作C，则可以得出操作A先行发生于操作C；")])]),t._v(" "),s("li",[s("p",[t._v("线程启动规则：Thread对象的start()方法先行发生于此线程的每个一个动作；")])]),t._v(" "),s("li",[s("p",[t._v("线程中断规则：对线程interrupt()方法的调用先行发生于被中断线程的代码检测到中断事件的发生；")])]),t._v(" "),s("li",[s("p",[t._v("线程终结规则：线程中所有的操作都先行发生于线程的终止检测，我们可以通过Thread.join()方法结束、Thread.isAlive()的返回值手段检测到线程已经终止执行；")])]),t._v(" "),s("li",[s("p",[t._v("对象终结规则：一个对象的初始化完成先行发生于他的finalize()方法的开始；")])])]),t._v(" "),s("p",[t._v("以上的happens-before原则为volatile关键字的可见性提供了强制保证。")]),t._v(" "),s("p",[s("strong",[t._v("并发编程三大特性：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("可见性")])]),t._v(" "),s("li",[s("p",[t._v("原子性")])]),t._v(" "),s("li",[s("p",[t._v("有序性")])])]),t._v(" "),s("p",[s("strong",[t._v("并发三特性总结")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("volatile")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("synchronized")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Lock")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Atomic")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("原子性")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("无法保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("可见性")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("有序性")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("可以保障")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("无法保障")])])])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("【文章参考】")]),t._v(" "),s("ol",[s("li",[s("p",[s("a",{attrs:{href:"https://baike.sogou.com/v6164.htm?fromTitle=CPU%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("CPU缓存 - 搜狗百科"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("缓存"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/73126227",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试官最爱的volatile关键字，你答对了吗？"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/068ca23c38ba",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java指令重排序与volatile关键字"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[t._v("Java Volatile关键字【公众号：并发编程网】")])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"http://rrd.me/gDawW",target:"_blank",rel:"noopener noreferrer"}},[t._v("volatile的原理分析"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://blog.csdn.net/lsunwing/article/details/83154208?depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase",target:"_blank",rel:"noopener noreferrer"}},[t._v("volatile是怎么保障内存可见性以及防止指令重排序的"),s("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=e.exports}}]);